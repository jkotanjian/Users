>>> User.objects.create(first_name="Cooper", last_name="Wolfe", email="cooper@cooper.com", age="6")
<User: User object (1)>

>>> User.objects.create(first_name="Jenny", last_name="Kotanjian", email="jlynnlu@hotmail.com", age="36")
<User: User object (2)>

>>> User.objects.create(first_name="Dude", last_name="Wolfe", email="dude@dude.com", age="2")
<User: User object (3)>

>>> User.objects.create(first_name="Hudson", last_name="Kotanjian", email="hudson@hudson.com", age="1")
<User: User object (4)>

>>> User.objects.all()
<QuerySet [<User: User object (1)>, <User: User object (2)>, <User: User object (3)>, <User: User object (4)>]>

>>> User.objects.last()
<User: User object (4)>

>>> User.objects.get(id=3)
<User: User object (3)>

>>> b=User.objects.get(id=3)
>>> b.last_name = "WhoChangedThis"
>>> b.save()

>>> User.objects.order_by("first_name")
<QuerySet [<User: User object (1)>, <User: User object (3)>, <User: User object (4)>, <User: User object (2)>]>

>>> User.objects.get().User.first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\jlynn\django_users\myvenv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\jlynn\django_users\myvenv\lib\site-packages\django\db\models\query.py", line 407, in get
    (self.model._meta.object_name, num)
apps.user_login.models.MultipleObjectsReturned: get() returned more than one User -- it returned 4!


>>> User.objects.get(first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'first_name' is not defined
>>> User.objects.get("first_name")
ValueError: too many values to unpack (expected 2)

>>> User.objects.get(id=3)
<User: User object (3)>

>>> User.objects.first()
<User: User object (1)>

>>> User.objects.filter(first_name="Jenny")
<QuerySet [<User: User object (2)>]>

>>> User.objects.order_by("first_name")
<QuerySet [<User: User object (1)>, <User: User object (3)>, <User: User object (4)>, <User: User object (2)>]>